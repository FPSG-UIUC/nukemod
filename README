Author: Dimitrios Skarlatos
Contact: skarlat2@illinois.edu - http://skarlat2.web.engr.illinois.edu/

Files Description:

Scripts:
run.sh // clears the log, install the nuke module, runs the experiment, and cleanup

Binaries:
nuke.ko // the nuke kernel module
openssl // the openssl application

Source:
nuke_mod.c, nuke_mod.h // the nuke kernel module source code
util.c, util.h // implementation of utility functionalities
openssl-0.9.8n/crypto/aes/aes_core.c // implementation of the aes encrypt and decrypt functions

Kernel Source (Same as PoC v0):
ubuntu_xenial_source.zip contains the kernel source 4.4.0-101
modifications are in mm/memory.c to coordinate the attack (util.h for details)
and arch/x86/mm/fault.c to allow kprobes to be installed on the
page fault mechanism.
A pre-compiled kernel is in compiled_deb.zip that contains the .deb files.

Kernel install steps:
1) sudo dpkg -i linux*.deb
2) reboot the machine and select the newly installed kernel
3) login
4) run uname -a which should return

>> Linux USERNAME 4.4.0-101-generic #124+attack SMP Tue Mar 6 14:26:05 CST 2018 x86_64 x86_64 x86_64 GNU/Linux


Steps simple:
0) run only once: sudo mknod nuke_channel c 1313 0 // this creates a char device
1) ./run.sh

Steps detailed:

-1) secrets.enc file was generated by using the following command:
./openssl enc -aes-128-cbc -in secrets.txt
password 12345

0) run only once: sudo mknod nuke_channel c 1313 0 // this creates a char device

1) cd openssl-0.9.8n

2) make

3) cd ../

4) make

5) sudo dmesg --clear

6) sudo insmod nuke.ko

7) dmesg -> this will print out the kernel log the expected message is:
>> PGFH: print_msg_attack is disabled
>> If a channel does not exist run: mknod nuke_channel c 1313 0

8) cd openssl-0.9.8n/apps

9) taskset -c 3 ./openssl enc -d -aes-128-cbc -in secrets.enc -out secrets.plain

10) cd ../../

11) sudo rmmod nuke

12) dmesg
expected out on dmesg:
>> PGFH: print_msg_attack is disabled


The output of (9) includes the full analysis of AES decrypt. First all the Td tables are printed
in three formats: a) full address, b) cache line offset, c) page offset
Furthermore the dynamic accesses to Td tables during decryption are printed for validation
by injecting a dummy run after the actual run of AES. Please see the report for more details
and output samples.
